uid: main_widget_HVAC_Card
tags: []
props:
  parameters:
    - description: Title of the card
      label: Title
      name: Title
      required: false
      type: TEXT
    - context: item
      description: HVAC Equipment Group
      label: HVAC Equipment Group
      name: groupItem
      required: false
      type: TEXT
    - context: item
      description: HVAC Power Item
      label: HVAC Power Item
      name: powerItem
      required: false
      type: TEXT
    - context: item
      description: HVAC Mode Item
      label: HVAC Mode Item
      name: modeItem
      required: false
      type: TEXT
timestamp: Nov 26, 2022, 12:10:56 AM
component: f7-block
config:
  style:
    background: "#F7F7F7"
    border-bottom-left-radius: var(--f7-card-expandable-border-radius)
    border-bottom-right-radius: var(--f7-card-expandable-border-radius)
    border-top-left-radius: var(--f7-card-expandable-border-radius)
    border-top-right-radius: var(--f7-card-expandable-border-radius)
    padding: 0px
slots:
  default:
    - component: f7-block
      config:
        style:
          align-items: center
          background: transparent
          display: flex
          flex-direction: row
          height: 60px
      slots:
        default:
          - component: oh-icon
            config:
              icon: iconify:iconoir:air-conditioner
              style:
                color: rgb(106,106,106)
                margin-left: 2px
                padding-right: 15px
              width: 40px
          - component: f7-row
            config:
              style:
                display: flex
                flex-direction: column
                flex-wrap: nowrap
            slots:
              default:
                - component: Label
                  config:
                    style:
                      font-size: 14px
                      font-weight: 400
                      padding-top: 10px
                      color: black
                    text: =props.Title
                - component: f7-row
                  config:
                    style:
                      display: flex
                      flex-direction: row
                  slots:
                    default:
                      - component: oh-repeater
                        config:
                          fetchMetadata: semantics,metadata
                          for: tempItem
                          sourceType: itemsInGroup
                          groupItem: =props.groupItem
                          filter: (loop.tempItem.tags).includes("Measurement") && (loop.tempItem.tags).includes("Temperature")
                        slots:
                          default:
                            - component: f7-chip
                              config:
                                style:
                                  background-color: "#6a6a6a"
                                  color: white
                                  font-size: 16px
                                  font-weight: 200
                                  justify-content: flex-end
                                text: "=items[loop.tempItem.name].displayState ? items[loop.tempItem.name].displayState : items[loop.tempItem.name].state"
                      - component: oh-repeater
                        config:
                          fetchMetadata: semantics,metadata
                          for: setpointItem
                          sourceType: itemsInGroup
                          groupItem: =props.groupItem
                          filter: (loop.setpointItem.tags).includes("Setpoint") && (loop.setpointItem.tags).includes("Temperature")
                        slots:
                          default:
                            - component: f7-chip
                              config:
                                style:
                                  background: none
                                  color: '=(items[props.modeItem].state=="COOL") ? "#15B4B7" : (items[props.modeItem].state=="HEAT") ? "#E74239" : (items[props.modeItem].state=="DRY") ? "#E7D200" : "gray"'
                                  font-size: 18px
                                  font-weight: 400
                                text: "=items[loop.setpointItem.name].displayState ? items[loop.setpointItem.name].displayState : items[loop.setpointItem.name].state"
          - component: f7-row
            config:
              style:
                align-self: flex-end
                display: flex
                flex: 1 1 auto
                flex-direction: row
                flex-wrap: nowrap
                justify-content: flex-end
            slots:
              default:
                - component: oh-toggle
                  config:
                    item: =props.powerItem
                    style:
                      --f7-toggle-active-color: =(items[props.modeItem].state=="COOL")?"#15B4B7":(items[props.modeItem].state=="HEAT")?"#E74239":(items[props.modeItem].state=="DRY")?"#E7D200":"gray"
                      --f7-toggle-inactive-color: gray
                      margin-right: 20px
    - component: f7-block
      config:
        style:
          align-items: center
          background: transparent
          display: flex
          flex-direction: row
      slots:
        default:
          - component: f7-row
            config:
              style:
                align-self: flex-start
                display: flex
                flex: 1 1 auto
                flex-direction: row
                flex-wrap: nowrap
                justify-content: flex-start
                margin-left: 5px
            slots:
              default:
                - component: oh-repeater
                  config:
                    fetchMetadata: semantics,metadata
                    for: tempItem
                    sourceType: itemsInGroup
                    groupItem: =props.groupItem
                    filter: (loop.tempItem.tags).includes("Measurement") && (loop.tempItem.tags).includes("Temperature")
                  slots:
                    default:
                      - component: oh-trend
                        config:
                          trendGradient: =[(items[props.modeItem].state=='COOL')?('#15B4B7'):(items[props.modeItem].state=='HEAT')?('#E74239'):(items[props.modeItem].state=='DRY')?('#E7D200'):('gray'),('gray')]
                          trendItem: =loop.tempItem.name
                          trendSampling: 5
          - component: oh-repeater
            config:
              fetchMetadata: semantics,metadata
              for: setpointItem
              sourceType: itemsInGroup
              groupItem: =props.groupItem
              filter: (loop.setpointItem.tags).includes("Setpoint") && (loop.setpointItem.tags).includes("Temperature")
            slots:
              default:
                - component: f7-row
                  config:
                    style:
                      align-self: flex-end
                      display: flex
                      flex: 1 1 auto
                      flex-direction: row
                      flex-wrap: nowrap
                      justify-content: flex-end
                  slots:
                    default:
                      - component: oh-link
                        config:
                          action: command
                          actionCommand: =Number(items[loop.setpointItem.name].state.split(' ')[0]) + 0.5
                          actionItem: =loop.setpointItem.name
                          style:
                            align-self: flex-end
                            background: transparent
                            display: flex
                            flex-direction: row
                            flex-wrap: nowrap
                            height: 35px
                            justify-content: flex-end
                            padding-right: 20px
                        slots:
                          default:
                            - component: oh-icon
                              config:
                                icon: f7:arrow_up_circle
                                style:
                                  color: '=(items[props.modeItem].state=="COOL") ? "#15B4B7" : (items[props.modeItem].state=="HEAT") ? "#E74239" : (items[props.modeItem].state=="DRY") ? "#E7D200" : "gray"'
                                width: 35px
                      - component: oh-link
                        config:
                          action: command
                          actionCommand: =Number(items[loop.setpointItem.name].state.split(' ')[0]) - 0.5
                          actionItem: =loop.setpointItem.name
                          style:
                            align-self: flex-end
                            background: transparent
                            display: flex
                            flex-direction: row
                            flex-wrap: nowrap
                            height: 35px
                            justify-content: flex-end
                            padding-right: 10px
                        slots:
                          default:
                            - component: oh-icon
                              config:
                                icon: f7:arrow_down_circle
                                style:
                                  color: '=(items[props.modeItem].state=="COOL") ? "#15B4B7" : (items[props.modeItem].state=="HEAT") ? "#E74239" : (items[props.modeItem].state=="DRY") ? "#E7D200" : "gray"'
                                width: 35px
    - component: f7-block
      config:
        style:
          --f7-card-footer-border-color: transparent
          align-items: center
          background: "#F2F2F2"
          border-radius: 0 0 var(--f7-card-expandable-border-radius) var(--f7-card-expandable-border-radius)
          display: flex
          flex-direction: row
          height: 50px
      slots:
        default:
          - component: f7-row
            config:
              style:
                align-items: center
                display: flex
                flex: 1 1 auto
                flex-direction: row
                justify-content: space-around
            slots:
              default:
                - component: oh-link
                  config:
                    action: command
                    actionCommand: COOL
                    actionItem: =props.modeItem
                  slots:
                    default:
                      - component: oh-icon
                        config:
                          color: '=(items[props.modeItem].state=="COOL") ? "#15B4B7" : "gray"'
                          icon: iconify:ion:snow
                          width: 24px
                - component: oh-link
                  config:
                    action: command
                    actionCommand: HEAT
                    actionItem: =props.modeItem
                  slots:
                    default:
                      - component: oh-icon
                        config:
                          color: '=(items[props.modeItem].state=="HEAT") ? "#E74239" : "gray"'
                          icon: iconify:ion:flame-sharp
                          width: 24px
                - component: oh-link
                  config:
                    action: command
                    actionCommand: DRY
                    actionItem: =props.modeItem
                  slots:
                    default:
                      - component: oh-icon
                        config:
                          color: '=(items[props.modeItem].state=="DRY") ? "#E7D200" : "gray"'
                          icon: iconify:material-symbols:cool-to-dry-rounded
                          width: 24px
                - component: oh-repeater
                  config:
                    for: fanspeedItem
                    sourceType: itemsInGroup
                    groupItem: =props.groupItem
                    fetchMetadata: semantics,metadata
                    filter: (loop.fanspeedItem.tags).includes("Control") && (loop.fanspeedItem.tags).includes("Wind")
                  slots:
                    default:
                      - component: oh-link
                        config:
                          action: options
                          actionItem: =loop.fanspeedItem.name
                        slots:
                          default:
                            - component: f7-chip
                              config:
                                text: "=items[loop.fanspeedItem.name].displayState ? items[loop.fanspeedItem.name].displayState : items[loop.fanspeedItem.name].state"
                            - component: oh-icon
                              config:
                                color: gray
                                icon: iconify:material-symbols:mode-fan
                                width: 24px
                - component: oh-repeater
                  config:
                    for: vanesItem
                    sourceType: itemsInGroup
                    groupItem: =props.groupItem
                    fetchMetadata: semantics,metadata
                    filter: (loop.vanesItem.tags).includes("Control") && (loop.vanesItem.tags).includes("Opening")
                  slots:
                    default:
                      - component: oh-link
                        config:
                          action: options
                          actionItem: =loop.vanesItem.name
                        slots:
                          default:
                            - component: f7-chip
                              config:
                                text: "=items[loop.vanesItem.name].displayState ? items[loop.vanesItem.name].displayState : items[loop.vanesItem.name].state"
                            - component: oh-icon
                              config:
                                color: gray
                                icon: f7:move
                                width: 24px
